{"version":3,"sources":["components/Profile/Profile.styled.jsx","components/Profile/Profile.jsx","components/Statistics/Statistics.styled.jsx","components/Statistics/Statistics.jsx","components/FriendList/Friend.styled.jsx","components/FriendList/Friend.jsx","components/FriendList/FriendList.styled.jsx","components/FriendList/FriendList.jsx","components/TransactionHistory/TransactionHistory.styled.jsx","components/TransactionHistory/TransactionHistory.jsx","App.js","index.js"],"names":["ProfileDiv","styled","div","Description","Image","img","Name","p","Tag","Location","Stats","ul","Quantity","span","Profile","avatar","name","location","tag","stats","followers","views","likes","className","src","alt","Statistics","section","Container","Title","h2","StatList","Item","li","Label","Percentage","Statisticss","title","class","map","id","label","percentage","style","backgroundColor","Math","floor","random","toString","Avatar","Friend","isOnline","width","defaultProps","List","FriendList","friends","TableStyled","table","TransactionHistory","items","type","amount","currency","App","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b3c7917c.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\nexport const ProfileDiv = styled.div`\r\n    margin-top: 20px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    max-width: 320px;\r\n    border: 1px solid #212121;\r\n    border-radius: 4px;\r\n`;\r\n\r\nexport const Description = styled.div`\r\n    font-family: 'Roboto', 'sans-serif';\r\n    font-size: 18px;\r\n    text-align: center;\r\n    display: block;\r\n    border-bottom: 1px solid #212121;\r\n`;\r\n\r\nexport const Image = styled.img`\r\n    margin: 35px auto 0px auto;\r\n    background-color: #9e9e9e;\r\n    border-radius: 50%;\r\n    max-width: 120px;\r\n`;\r\n\r\nexport const Name = styled.p`\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    color: #212121;\r\n`;\r\n\r\n\r\nexport const Tag = styled.p`\r\n    margin: 1px auto 10px auto;\r\n    color: #212121;\r\n`;\r\n\r\nexport const Location = styled.p`\r\n    margin: 10px auto 20px auto;\r\n    color: #212121;\r\n`;\r\n\r\nexport const Stats = styled.ul`\r\n    margin: 0;\r\n    padding: 0;\r\n    display: flex;\r\n    justify-content: center;\r\n    list-style-type: none;\r\n    text-align: center;\r\n    background-color: #e0dede;\r\n\r\n    & li {\r\n        display: flex;\r\n        flex-direction: column;\r\n        padding: 15px 0px;\r\n        width: 120px;\r\n        font-size: 14px;\r\n        color: #212121;\r\n\r\n        &:nth-child(2n) {\r\n            border-right: 1px solid #212121;\r\n            border-left: 1px solid #212121;\r\n        }\r\n    }\r\n`;\r\n\r\nexport const Quantity = styled.span`\r\n    margin-top: 4px;\r\n    font-size: 15px;\r\n    font-weight: 700;\r\n    color: #212121;\r\n`;\r\n\r\n\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { ProfileDiv, Description, Image, Name, Tag, Location, Stats, Quantity } from './Profile.styled'\r\n\r\nconst Profile = ({ avatar, name, location, tag, stats: { followers, views, likes } }) => {\r\n    return (\r\n        <ProfileDiv className='profile'>\r\n            <Description className='description'>\r\n                <Image\r\n                    src={avatar}\r\n                    alt={name}\r\n                    className='avatar'\r\n                />\r\n                <Name className='name'>{name}</Name>\r\n                <Tag className='tag'>@{tag}</Tag>\r\n                <Location className='location'>{location}</Location>\r\n            </Description >\r\n\r\n            <Stats className='stats'>\r\n                <li>\r\n                    <span className='label'>Followers</span>\r\n                    <Quantity className='quantity'>{followers}</Quantity>\r\n                </li>\r\n                <li>\r\n                    <span className='label'>Views</span>\r\n                    <Quantity className='quantity'>{views}</Quantity>\r\n                </li>\r\n                <li>\r\n                    <span className='label'>Likes</span>\r\n                    <Quantity className='quantity'>{likes}</Quantity>\r\n                </li>\r\n            </Stats>\r\n        </ProfileDiv>\r\n    );\r\n}\r\n\r\nProfile.propTypes = {\r\n    avatar: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    location: PropTypes.string.isRequired,\r\n    tag: PropTypes.string.isRequired,\r\n    stats: PropTypes.shape({\r\n        followers: PropTypes.number.isRequired,\r\n        views: PropTypes.number.isRequired,\r\n        likes: PropTypes.number.isRequired,\r\n    }),\r\n}\r\n\r\nexport default Profile;","import styled from '@emotion/styled'\r\n\r\nexport const Statistics = styled.section`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin-top: 20px;\r\n    margin-bottom: 20px;\r\n`;\r\nexport const Container = styled.div`\r\n    border:1px solid black;\r\n`;\r\nexport const Title = styled.h2`\r\n    text-align: center;\r\n    text-transform: uppercase;\r\n    color: red;\r\n`;\r\nexport const StatList = styled.ul`\r\n    display: flex;\r\n    flex-direction: row;\r\n    padding: 0;\r\n    margin: 0;\r\n`;\r\nexport const Item = styled.li`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    height: 70px;\r\n    width: 70px;\r\n`;\r\nexport const Label = styled.span`\r\n    margin-bottom: 10px;\r\n    font-size: 14px;\r\n`;\r\nexport const Percentage = styled.span`\r\n    font-size: 16px;\r\n    font-weight: 400;\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport {Statistics,Title,StatList,Item,Label,Percentage,Container} from \"./Statistics.styled\";\r\n\r\nconst generateColor = () => {\r\n  return '#' + Math.floor(Math.random() * 16777215).toString(16);\r\n};\r\n\r\nconst Statisticss = ({title, stats}) => {\r\n  return (\r\n      <Statistics class=\"statistics\">\r\n          <Container>\r\n          <Title class=\"title\">{title}</Title>\r\n\r\n          <StatList class=\"stat-list\">\r\n              {stats.map(({ id, label, percentage }) => (<Item key={id} class=\"item\" style={{ backgroundColor: generateColor()}}>\r\n                  <Label class=\"label\">{label}</Label>\r\n                  <Percentage class=\"percentage\">{percentage}%</Percentage>\r\n        </Item> ))}\r\n              </StatList>\r\n              </Container>\r\n    </Statistics>\r\n  );\r\n};\r\n\r\nStatisticss.propTypes = {\r\n    title: PropTypes.string,\r\n    stats: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string,\r\n            label: PropTypes.string,\r\n            percentage:PropTypes.number\r\n        })\r\n    )\r\n}\r\n\r\nexport default Statisticss;\r\n","import styled from '@emotion/styled'\r\nexport const Item = styled.li`\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  min-width: 380px;\r\n  height: 120px;\r\n  margin: 7px;\r\n  background-color: snow;\r\n  border: 1px solid #858585;\r\n  border-radius: 3px;\r\n  box-shadow: 1px 2px 3px rgba(0, 0, 0, 0.4);\r\n\r\n  .status{\r\n        width: 30px;\r\n  height: 30px;\r\n  border-radius: 50%;\r\n  margin: 15px;\r\n  }\r\n\r\n  .online {\r\n  background-color: darkgreen;\r\n}\r\n.offline {\r\n  background-color: red;\r\n}\r\n\r\n.name{\r\n    margin-left: 18px;\r\n  font-size: 28px;\r\n  font-weight: 500;\r\n  text-transform: capitalize;\r\n}\r\n`;\r\n\r\n\r\n\r\nexport const Avatar = styled.img`\r\n  width: 70px;\r\n  height: 70px;\r\n  background-color: #858585;\r\n  border-radius: 10px;\r\n`;","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Item,Avatar } from './Friend.styled';\r\nconst Friend = ({isOnline=true, avatar,name}) => {\r\n    return (\r\n        <Item className=\"item\">\r\n              <span className={`${isOnline ? 'online' : 'offline'} status`} ></span>\r\n  <Avatar className=\"avatar\" src={avatar} alt={name} width=\"48\" />\r\n            <p className=\"name\">{name}</p>\r\n        </Item>\r\n    );\r\n}\r\nFriend.defaultProps = {\r\n    isOnline: true,\r\n};\r\n\r\nFriend.propTypes = {\r\n    isOnline: PropTypes.bool.isRequired,\r\n    avatar: PropTypes.string.isRequired,\r\n    name:PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Friend;","import styled from '@emotion/styled';\r\nexport const List = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-right: auto;\r\n  padding: 0;\r\n  list-style: none;\r\n`;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport Friend from './Friend'\r\nimport { List } from './FriendList.styled';\r\nconst FriendList = ({ friends }) => {\r\n    return (\r\n        <List class=\"friend-list\">\r\n            {friends.map(({avatar,isOnline, name, id }) => (\r\n                <Friend key={id} avatar={avatar} name={name} isOnline={isOnline}/>\r\n            ))}\r\n</List>\r\n    );\r\n}\r\n\r\nFriendList.propTypes = {\r\n    friends: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id:PropTypes.number.isRequired,\r\n        })\r\n    )\r\n}\r\n\r\nexport default FriendList;","import styled from '@emotion/styled';\r\nexport const TableStyled = styled.table`\r\n  min-width: 800px;\r\n  border-collapse: collapse;\r\n  margin: 0 auto 70px;\r\n  font-family: 'Roboto', Sans-Serif;\r\n  font-size: 14px;\r\n  color: #212121;\r\n  border-collapse: collapse;\r\n  text-align: center;\r\n  border-bottom: 1px solid #dbdbdb;\r\nbox-shadow: -1px 0px 15px 4px rgba(0,0,0,0.86);\r\n\r\nth {\r\n  width: 250px;\r\n  height: 45px;\r\n  padding: 10px 20px;\r\n  border-style: solid;\r\n  border-width: 0 1px 1px 0;\r\n  text-align: center;\r\n  font-weight: 600;\r\n  color: #ffffff;\r\n  border-color: #ffffff;\r\n  background: #07aecc;\r\n  text-transform: uppercase;\r\n}\r\n\r\ntd {\r\n  width: 250px;\r\n  height: 45px;\r\n  padding: 10px 20px;\r\n  border-left: 1px solid #cfcdcd;\r\n  border-right: 1px solid #cfcdcd;\r\n  color: #4d4d4df1;\r\n}\r\n\r\n.type{\r\n      text-transform:capitalize;\r\n      font-weight:700;\r\n}\r\ntbody:nth-child(even) {\r\n  background-color: rgb(216, 216, 216);\r\n}\r\n`;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { TableStyled } from './TransactionHistory.styled';\r\nconst TransactionHistory = ({ items }) => {\r\n    return (\r\n        <TableStyled className=\"transaction-history\">\r\n  <thead>\r\n    <tr>\r\n      <th>Type</th>\r\n      <th>Amount</th>\r\n      <th>Currency</th>\r\n    </tr>\r\n  </thead>\r\n            {items.map(({id,type,amount,currency }) => (\r\n                <tbody  key={id}>\r\n    <tr>\r\n                        <td className='type'>{type}</td>\r\n                        <td>{amount}</td>\r\n                        <td>{currency}</td>\r\n    </tr>\r\n  </tbody>\r\n            ))}\r\n  \r\n</TableStyled>\r\n    );\r\n}\r\n\r\nTransactionHistory.propTypes = {\r\n    transactions: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n\r\n        })\r\n    )\r\n}\r\n\r\nexport default TransactionHistory;","import React from \"react\";\r\nimport user from \"./data/user.json\";\r\nimport statisticalData from \"./data/statistical-data.json\";\r\nimport friends from './data/friends.json';\r\nimport transactions from './data/transactions.json'\r\nimport \"./App.css\";\r\nimport Profile from \"./components/Profile/Profile\";\r\nimport Statisticss from \"./components/Statistics/Statistics\";\r\nimport FriendList from './components/FriendList/FriendList'\r\nimport TransactionHistory from \"./components/TransactionHistory/TransactionHistory\";\r\nconst App = () => {\r\n  return (\r\n    <>\r\n    <Profile\r\n      name={user.name}\r\n      tag={user.tag}\r\n      location={user.location}\r\n      avatar={user.avatar}\r\n      stats={user.stats}\r\n      />\r\n      <Statisticss title=\"Upload stats\" stats={statisticalData} />\r\n      <FriendList friends={friends} />\r\n      <TransactionHistory items={transactions}/>\r\n</>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}